apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion


    defaultConfig {
        applicationId "com.zp.androidx.app"
        multiDexEnabled true

        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        renderscriptTargetApi rootProject.ext.android.minSdkVersion
        renderscriptSupportModeEnabled true

        ndk {
            abiFilters "armeabi-v7a", "x86_64", "x86"
        }
    }

    dataBinding.enabled true

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst 'META-INF/*'
        exclude 'lib/armeabi/libcoldlar-lib.so'
        exclude 'org/apache/commons/codec/language/bm/gen_approx_hungarian.txt'
        exclude 'org/apache/commons/codec/language/bm/*.txt'
        exclude 'org/apache/commons/codec/**'
        exclude 'javax/annotation/**'
        exclude 'com/google/**'
        exclude 'org/bitcoinj/**'

        exclude 'LICENSE.txt'
    }

    lintOptions {
        //textOutput "stdout"
        //textReport true
        //checkAllWarnings true
        //warningsAsErrors true
        //showAll true
        //explainIssues true
        checkReleaseBuilds false
        abortOnError false
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':store:wanandroid')
    implementation project(':libs:base')

    api project(':modules:home')
    api project(':modules:knowledge')
    api project(':modules:user')
    api project(':modules:project')

    kapt arouterCompilerKapt

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
